[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_321)
[debug] Load.defaultLoad until apply took 1726.4724ms
[debug]           Load.loadUnit: plugins took 166.6947ms
[debug]           Load.loadUnit: defsScala took 0.4741ms
[debug] [Loading] Scanning directory D:\IdeaProjects\HIVE\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\IdeaProjects\HIVE\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 35.7192 ms
[debug]               Load.resolveProject(hive-build) took 78.5848ms
[debug]             Load.loadTransitive: finalizeProject(Project(id hive-build, base: D:\IdeaProjects\HIVE\project, plugins: List(<none>))) took 154.2594ms
[debug] [Loading] Done in D:\IdeaProjects\HIVE\project, returning: (hive-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 181.4017ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.5776ms
[debug]         Load.loadUnit(file:/D:/IdeaProjects/HIVE/project/, ...) took 359.0978ms
[debug]       Load.apply: load took 739.2903ms
[debug]       Load.apply: resolveProjects took 29.1064ms
[debug]       Load.apply: finalTransforms took 141.6777ms
[debug]       Load.apply: config.delegates took 15.8224ms
[debug]       Load.apply: Def.make(settings)... took 965.0663ms
[debug]       Load.apply: structureIndex took 219.7073ms
[debug]       Load.apply: mkStreams took 3.0926ms
[info] loading project definition from D:\IdeaProjects\HIVE\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4427.0292ms
[debug]     Load.loadUnit: defsScala took 0.0074ms
[debug] [Loading] Scanning directory D:\IdeaProjects\HIVE
[debug]       Load.loadUnit: mkEval took 17.0904ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.8346 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 8.5925ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\IdeaProjects\HIVE, plugins: List(<none>))) took 20.1997ms
[debug] [Loading] Done in D:\IdeaProjects\HIVE, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 769.2326ms
[debug]     Load.loadUnit: cleanEvalClasses took 32.9861ms
[debug]   Load.loadUnit(file:/D:/IdeaProjects/HIVE/, ...) took 5231.7334ms
[debug] Load.apply: load took 5271.9582ms
[debug] Load.apply: resolveProjects took 0.6172ms
[debug] Load.apply: finalTransforms took 46.257ms
[debug] Load.apply: config.delegates took 0.8024ms
[debug] Load.apply: Def.make(settings)... took 437.0219ms
[debug] Load.apply: structureIndex took 124.8327ms
[debug] Load.apply: mkStreams took 0.0037ms
[info] set current project to HIVE (in build file:/D:/IdeaProjects/HIVE/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-b3177dd892950b7aaffb
[debug] Writing bsp connection file
[info] started sbt server
